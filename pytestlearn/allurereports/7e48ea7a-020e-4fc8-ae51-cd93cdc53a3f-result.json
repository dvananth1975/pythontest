{"name": "test_login[anand@isos.com-Summerr@2022]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"onetrust-accept-btn-handler\"]\"}\n  (Session info: chrome=115.0.5790.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF767EB4A62+57106]\n\t(No symbol) [0x00007FF767E2CF52]\n\t(No symbol) [0x00007FF767CFE2CB]\n\t(No symbol) [0x00007FF767D3786E]\n\t(No symbol) [0x00007FF767D3795C]\n\t(No symbol) [0x00007FF767D70477]\n\t(No symbol) [0x00007FF767D569FF]\n\t(No symbol) [0x00007FF767D6E522]\n\t(No symbol) [0x00007FF767D56793]\n\t(No symbol) [0x00007FF767D2CE81]\n\t(No symbol) [0x00007FF767D2E064]\n\tGetHandleVerifier [0x00007FF768164222+2873042]\n\tGetHandleVerifier [0x00007FF7681B6590+3209792]\n\tGetHandleVerifier [0x00007FF7681AF3AF+3180639]\n\tGetHandleVerifier [0x00007FF767F45F25+652245]\n\t(No symbol) [0x00007FF767E38618]\n\t(No symbol) [0x00007FF767E347C4]\n\t(No symbol) [0x00007FF767E348BC]\n\t(No symbol) [0x00007FF767E24C33]\n\tBaseThreadInitThunk [0x00007FFF3EAF26AD+29]\n\tRtlUserThreadStart [0x00007FFF4062AA68+40]", "trace": "username = 'anand@isos.com', password = 'Summerr@2022'\n\n    @pytest.mark.usefixtures(\"log_on_failure\")\n    @pytest.mark.parametrize(\"username,password\",get_data())\n    def test_login(username,password):\n        driver.find_element(By.XPATH ,\"//*[@id=\\\"MainContent_LoginUser_txtUserName\\\"] \").send_keys(username)\n        driver.find_element(By.XPATH,\"//*[@id=\\\"MainContent_LoginUser_txtPassword\\\"]\").send_keys(password)\n>       driver.find_element(By.XPATH,\"//*[@id=\\\"onetrust-accept-btn-handler\\\"]\").click()\n\ntest_webdriver_integ.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002225A9959D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF767E24C33]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF3EAF26AD+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF4062AA68+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"onetrust-accept-btn-handler\"]\"}\nE         (Session info: chrome=115.0.5790.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF767EB4A62+57106]\nE       \t(No symbol) [0x00007FF767E2CF52]\nE       \t(No symbol) [0x00007FF767CFE2CB]\nE       \t(No symbol) [0x00007FF767D3786E]\nE       \t(No symbol) [0x00007FF767D3795C]\nE       \t(No symbol) [0x00007FF767D70477]\nE       \t(No symbol) [0x00007FF767D569FF]\nE       \t(No symbol) [0x00007FF767D6E522]\nE       \t(No symbol) [0x00007FF767D56793]\nE       \t(No symbol) [0x00007FF767D2CE81]\nE       \t(No symbol) [0x00007FF767D2E064]\nE       \tGetHandleVerifier [0x00007FF768164222+2873042]\nE       \tGetHandleVerifier [0x00007FF7681B6590+3209792]\nE       \tGetHandleVerifier [0x00007FF7681AF3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF767F45F25+652245]\nE       \t(No symbol) [0x00007FF767E38618]\nE       \t(No symbol) [0x00007FF767E347C4]\nE       \t(No symbol) [0x00007FF767E348BC]\nE       \t(No symbol) [0x00007FF767E24C33]\nE       \tBaseThreadInitThunk [0x00007FFF3EAF26AD+29]\nE       \tRtlUserThreadStart [0x00007FFF4062AA68+40]\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "username", "value": "'anand@isos.com'"}, {"name": "password", "value": "'Summerr@2022'"}], "start": 1691287024198, "stop": 1691287024509, "uuid": "77cf8971-da1d-42dc-9340-9c00b55a4aa6", "historyId": "fd11c15ece81e8eccb3a3c2a32f3fb66", "testCaseId": "1285348ec4c454e0a6ccfab02c3e6d8e", "fullName": "test_webdriver_integ#test_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure')"}, {"name": "suite", "value": "test_webdriver_integ"}, {"name": "host", "value": "Anand"}, {"name": "thread", "value": "27924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_webdriver_integ"}]}